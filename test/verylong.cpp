#include "math.h"
#include "gtest/gtest.h"

#include "symbolicc++.h"

using namespace std;

TEST(Verylong, BigSum)
{
    Verylong a("126985029583040451631267479362487354632643920650141164661593517077944756804886061187446381180439167787560708649437498249618095632779181405813546833457853022986717173918971435539390625724009787252117667841448622407978563890398942161321631273873180693372068236861644515566221692543897655102128806125779"),
        b("126985029583040451631267479362487354632643920650141164661593517077944756804886061187446381180439167787560708649437498249618095632779181405813546833457853022986717173918971435539390625724009787252117667841448622407978563890398942161321631273873180693372068236861644515566221692543897655102128806125779");

    ASSERT_TRUE(a + b == b + a);
}

TEST(Verylong, BigProduct)
{
    Verylong a("126985029583040451631267479362487354632643920650141164661593517077944756804886061187446381180439167787560708649437498249618095632779181405813546833457853022986717173918971435539390625724009787252117667841448622407978563890398942161321631273873180693372068236861644515566221692543897655102128806125779"),
        b("126985029583040451631267479362487354632643920650141164661593517077944756804886061187446381180439167787560708649437498249618095632779181405813546833457853022986717173918971435539390625724009787252117667841448622407978563890398942161321631273873180693372068236861644515566221692543897655102128806125779");

    ASSERT_TRUE(a * b == b * a);
}

TEST(Verylong, BigSqrt)
{
    Verylong a("126985029583040451631267479362487354632643920650141164661593517077944756804886061187446381180439167787560708649437498249618095632779181405813546833457853022986717173918971435539390625724009787252117667841448622407978563890398942161321631273873180693372068236861644515566221692543897655102128806125779"), b("100000000000000000000000000000000000000000000");

    ASSERT_TRUE(sqrt(a) == sqrt(a));
}

TEST(Verylong, Factorize)
{
    Verylong composite("45105705414323153");
    list<Verylong*> factors = factorize(composite);

    ASSERT_TRUE(factors.size() == 2);

    for (auto factor : factors) {
        delete factor;
    }
}

TEST(Verylong, Sqrt)
{
    Verylong a("25");
    ASSERT_TRUE(sqrt(a) == Verylong(5));
}

int main(int argc, char** argv)
{
    ::testing::InitGoogleTest(&argc, argv);
    return RUN_ALL_TESTS();
}